#!/bin/sh
# This script will compile or run another finishing operation on a document. I
# have this script run via vim.
#
# Compiles .tex. groff (.mom, .ms), .rmd, .md.  Opens .sent files as sent
# presentations.  Runs scripts based on extention or shebang

file=$(readlink -f "$1")
dir=$(dirname "$file")
build_dir="$dir/build"
base="${file%.*}"

cd "$dir" || exit

textype() { \
  command="pdflatex"
  ( sed 5q "$file" | grep -i -q 'xelatex' ) && command="xelatex"
  $command --output-directory="$build_dir" "$base" &&
  grep -i addbibresource "$file" >/dev/null &&
  biber --input-directory "$dir" --output-directory="$build_dir" "$base" &&
  $command --output-directory="$build_dir" "$base" &&
  $command --output-directory="$build_dir" "$base"
  }

case "$file" in
  *\.ms) refer -PS -e "$file" | groff -me -ms -kept -T pdf > "$base".pdf ;;
  *\.mom) refer -PS -e "$file" | groff -mom -kept -T pdf > "$base".pdf ;;
  *\.[0-9]) refer -PS -e "$file" | groff -mandoc -T pdf > "$base".pdf ;;
  *\.rmd) echo "require(rmarkdown); render('$file')" | R -q --vanilla ;;
  *\.R | *\.r) R --quiet -f "$file" ;;
  *\.tex) textype "$file" ;;
  *\.md) pandoc "$file" --pdf-engine=xelatex -o "$base".pdf ;;
  *config.h) sudo make install ;;
  *\.c | *\.cpp) gcc -g -Wall "$file" -o "$base" -lm && "$base" ;;
  *\.py) python "$file" ;;
  *\.go) go run "$file" ;;
  *\.sent) setsid sent "$file" 2>/dev/null & ;;
  *) sed 1q "$file" | grep "^#!/" | sed "s/^#!//" | xargs -r -I % "$file" ;;
esac
