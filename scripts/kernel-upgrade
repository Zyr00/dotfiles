#!/usr/bin/env bash
red=$(tput setaf 1)
blue=$(tput setaf 4)
normal=$(tput sgr0)

if [[ $EUID -ne 0 ]]; then
  echo "Please run as root to upgrade kernel${normal}"
  exit 1
fi

set -e

MAKEOPTS="-j`nproc`"

# Save prev config
printf "${blue}Saving config has /root/kernel-`uname -r`-config${normal}\n\n"
cp /usr/src/linux/.config ~/kernel-`uname -r`-config

# List all kernels
eselect kernel list

# Read kernel
read -p "Select Kernel: " kernel
kernel=${kernel:-1}

# Set kernel
eselect kernel set $kernel

# cd to kernel folder
cd /usr/src/linux

# Menu config
make menuconfig $MAKEOPTS

# Build commands
echo "${blue}Building kernel${normal}"
make olddefconfig $MAKEOPTS
make modules_prepare $MAKEOPTS
make $MAKEOPTS
make modules_install $MAKEOPTS
make install $MAKEOPTS

echo "${blue}Setting permitions to 755${normal}"
chmod 755 -R .

# Build new genkernel
printf "${blue}Building initramfs${normal}\n\n"
genkernel --luks --lvm --kernel-config=.config --install initramfs

# Build new grub
printf "${blue}Building grub config${normal}\n\n"
grub-mkconfig -o /boot/grub/grub.cfg

# Rebuild modules
printf "${blue}Rebuild modules${normal}\n\n"
emerge -v @module-rebuild
